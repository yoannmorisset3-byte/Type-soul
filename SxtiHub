local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local VirtualInputManager = game:GetService("VirtualInputManager")

local LocalPlayer = Players.LocalPlayer

-- Nom du Mission Board dans workspace
local missionBoardName = "MissionBoard"

local AutoFarmEnabled = false

-- Création GUI simple
local ScreenGui = Instance.new("ScreenGui", LocalPlayer:WaitForChild("PlayerGui"))
ScreenGui.Name = "TypeSoulAutoFarmGUI"

local Frame = Instance.new("Frame", ScreenGui)
Frame.Size = UDim2.new(0, 300, 0, 150)
Frame.Position = UDim2.new(0, 10, 0.5, -75)
Frame.BackgroundColor3 = Color3.fromRGB(30,30,30)
Frame.BorderSizePixel = 0
Frame.Active = true
Frame.Draggable = true

local Title = Instance.new("TextLabel", Frame)
Title.Text = "Type Soul AutoFarm"
Title.Size = UDim2.new(1, 0, 0, 30)
Title.BackgroundTransparency = 1
Title.TextColor3 = Color3.new(1,1,1)
Title.Font = Enum.Font.GothamBold
Title.TextScaled = true

local function createButton(text, y, callback)
    local btn = Instance.new("TextButton", Frame)
    btn.Text = text
    btn.Size = UDim2.new(0.8, 0, 0, 35)
    btn.Position = UDim2.new(0.1, 0, 0, y)
    btn.BackgroundColor3 = Color3.fromRGB(45, 45, 45)
    btn.TextColor3 = Color3.new(1,1,1)
    btn.Font = Enum.Font.Gotham
    btn.TextScaled = true
    btn.AutoButtonColor = true
    btn.MouseButton1Click:Connect(callback)
    return btn
end

-- Fonction pour se téléporter devant Mission Board
local function teleportToMissionBoard()
    local board = workspace:FindFirstChild(missionBoardName)
    if board and board.PrimaryPart then
        local root = LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
        if root then
            root.CFrame = board.PrimaryPart.CFrame * CFrame.new(0, 0, 3)
            task.wait(0.3)
        end
        return board
    end
    warn("MissionBoard non trouvé !")
    return nil
end

-- Fonction pour interagir avec la quête (cliquer papier + confirmer)
local function acceptQuest(board)
    if not board then return false end

    -- Essayer de trouver ClickDetector sur board et cliquer
    for _, child in pairs(board:GetChildren()) do
        if child:IsA("ClickDetector") then
            fireclickdetector(child)
            task.wait(0.5)
        end
    end
    -- Essayer trouver ProximityPrompt et déclencher
    local prompt = board:FindFirstChildOfClass("ProximityPrompt")
    if prompt and prompt.Enabled then
        prompt:InputHoldBegin()
        task.wait(0.5)
        prompt:InputHoldEnd()
    end

    -- Ici on suppose que ça ouvre un GUI avec "Yes" bouton pour confirmer, on simule click
    -- C’est spécifique au jeu, peut nécessiter adaptation selon UI
    local playerGui = LocalPlayer:WaitForChild("PlayerGui")
    local questGui = playerGui:FindFirstChildWhichIsA("ScreenGui") -- Change si GUI spécifique
    if questGui then
        local yesButton = questGui:FindFirstChild("YesButton") or questGui:FindFirstChildWhichIsA("TextButton")
        if yesButton then
            yesButton.MouseButton1Click:Fire()
            task.wait(0.5)
            return true
        end
    end
    return true
end

-- Trouver ennemis de la quête (filtre par tag "Enemy" ou autres critères)
local function getQuestEnemies()
    local enemies = {}
    local root = LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
    if not root then return enemies end

    for _, npc in pairs(workspace:GetDescendants()) do
        if npc:IsA("Model") and npc:FindFirstChild("Humanoid") and npc:FindFirstChild("HumanoidRootPart") then
            if npc:FindFirstChild("Enemy") then
                table.insert(enemies, npc)
            end
        end
    end
    return enemies
end

-- Attaque simple : tp au dessus de l'ennemi et simuler clic
local function attackEnemy(enemy)
    if not enemy or not enemy.Parent then return end
    local root = LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
    if root and enemy:FindFirstChild("HumanoidRootPart") then
        root.CFrame = enemy.HumanoidRootPart.CFrame * CFrame.new(0, 5, 0)
        task.wait(0.2)
        for i = 1, 3 do
            VirtualInputManager:SendMouseButtonEvent(500, 500, 0, true, game, 1)
            task.wait(0.05)
            VirtualInputManager:SendMouseButtonEvent(500, 500, 0, false, game, 1)
            task.wait(0.1)
        end
    end
end

-- Vérifie si ennemi est mort (HP = 0)
local function isDead(enemy)
    if enemy and enemy:FindFirstChild("Humanoid") then
        return enemy.Humanoid.Health <= 0
    end
    return true
end

-- Exécuter les ennemis morts avec touche B
local function executeDeadEnemies(enemies)
    for _, enemy in pairs(enemies) do
        if enemy and isDead(enemy) then
            local root = LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
            if root and enemy:FindFirstChild("HumanoidRootPart") then
                root.CFrame = enemy.HumanoidRootPart.CFrame + Vector3.new(0, 5, 0)
                task.wait(0.1)
                VirtualInputManager:SendKeyEvent(true, Enum.KeyCode.B, false, game)
                task.wait(0.1)
                VirtualInputManager:SendKeyEvent(false, Enum.KeyCode.B, false, game)
                task.wait(0.3)
            end
        end
    end
end

-- Fonction principale autofarm
local function autoFarmLoop()
    while AutoFarmEnabled do
        local board = teleportToMissionBoard()
        if board then
            acceptQuest(board)
            task.wait(1)
            local enemies = getQuestEnemies()
            while #enemies > 0 do
                for _, enemy in pairs(enemies) do
                    if not isDead(enemy) then
                        attackEnemy(enemy)
                    end
                end
                task.wait(0.5)
                executeDeadEnemies(enemies)
                enemies = getQuestEnemies() -- refresh ennemis
            end
            task.wait(1) -- temps avant prochaine quête
        else
            warn("MissionBoard non trouvé, retry dans 5s")
            task.wait(5)
        end
        task.wait(0.5)
    end
end

-- Boutons GUI

local startBtn = createButton("Start AutoFarm", 40, function()
    if not AutoFarmEnabled then
        AutoFarmEnabled = true
        startBtn.Text = "Stop AutoFarm"
        task.spawn(autoFarmLoop)
    else
        AutoFarmEnabled = false
        startBtn.Text = "Start AutoFarm"
    end
end)

local stopBtn = createButton("Stop All", 90, function()
    AutoFarmEnabled = false
    startBtn.Text = "Start AutoFarm"
end)
