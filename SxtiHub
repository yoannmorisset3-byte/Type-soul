-local Players = game:GetService("Players")
local VirtualInputManager = game:GetService("VirtualInputManager")
local LocalPlayer = Players.LocalPlayer
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")

local missionBoardName = "MissionBoard"

-- Fonction pour TP devant le mission board
local function tpToMissionBoard()
    local board = workspace:FindFirstChild(missionBoardName)
    if board and board.PrimaryPart then
        local root = LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
        if root then
            root.CFrame = board.PrimaryPart.CFrame * CFrame.new(0, 0, 3)
            task.wait(0.3)
            return true
        end
    end
    return false
end

-- Fonction pour prendre une quête (cliquer sur tableau puis "Yes" dans GUI)
local function takeQuest()
    local board = workspace:FindFirstChild(missionBoardName)
    if not board then
        warn("MissionBoard non trouvé.")
        return false
    end

    -- Cliquer sur ClickDetector ou ProximityPrompt
    for _, child in ipairs(board:GetChildren()) do
        if child:IsA("ClickDetector") then
            fireclickdetector(child)
            task.wait(0.5)
            break
        end
    end

    local prompt = board:FindFirstChildOfClass("ProximityPrompt")
    if prompt and prompt.Enabled then
        prompt:InputHoldBegin()
        task.wait(0.5)
        prompt:InputHoldEnd()
    end

    -- Attendre la GUI de quête (exemple: un ScreenGui dans PlayerGui avec bouton "Yes")
    local questGui = nil
    local maxWait = 5
    local timer = 0
    while timer < maxWait do
        questGui = LocalPlayer.PlayerGui:FindFirstChild("QuestGui") -- Nom à vérifier dans le jeu
        if questGui then
            local yesButton = questGui:FindFirstChild("YesButton") -- Nom du bouton "Yes" à vérifier
            if yesButton and yesButton:IsA("TextButton") and yesButton.Visible then
                yesButton.MouseButton1Click:Invoke() -- simuler clic (parfois click() marche)
                task.wait(0.5)
                return true
            end
        end
        task.wait(0.5)
        timer = timer + 0.5
    end

    warn("Bouton Yes introuvable dans la GUI")
    return false
end

-- Récupérer les ennemis vivants
local function getQuestEnemies()
    local enemies = {}
    for _, npc in ipairs(workspace:GetDescendants()) do
        if npc:IsA("Model") and npc:FindFirstChild("Humanoid") and npc:FindFirstChild("HumanoidRootPart") and npc:FindFirstChild("Enemy") then
            if npc.Humanoid.Health > 0 then
                table.insert(enemies, npc)
            end
        end
    end
    return enemies
end

-- Attaquer un ennemi
local function attackEnemy(enemy)
    local root = LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
    if root and enemy and enemy:FindFirstChild("HumanoidRootPart") then
        root.CFrame = enemy.HumanoidRootPart.CFrame + Vector3.new(0, 8, 0)
        task.wait(0.1)
        for _=1, 2 do
            VirtualInputManager:SendMouseButtonEvent(500, 500, 0, true, game, 1)
            task.wait(0.05)
            VirtualInputManager:SendMouseButtonEvent(500, 500, 0, false, game, 1)
        end
    end
end

-- Exécuter les ennemis morts (touche B)
local function executeEnemies()
    local root = LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart")
    if not root then return end
    for _, enemy in ipairs(workspace:GetDescendants()) do
        if enemy:IsA("Model") and enemy:FindFirstChild("Humanoid") and enemy.Humanoid.Health <= 0 then
            if enemy:FindFirstChild("HumanoidRootPart") then
                LocalPlayer.Character:PivotTo(enemy:GetPivot())
                task.wait(0.1)
                VirtualInputManager:SendKeyEvent(true, Enum.KeyCode.B, false, game)
                task.wait(0.05)
                VirtualInputManager:SendKeyEvent(false, Enum.KeyCode.B, false, game)
                task.wait(0.3)
            end
        end
    end
end

-- Boucle principale autofarm
local AutoFarm = true

spawn(function()
    while AutoFarm do
        if not tpToMissionBoard() then
            warn("Impossible de TP au mission board.")
            task.wait(3)
            continue
        end

        if not takeQuest() then
            warn("Impossible de prendre la quête.")
            task.wait(3)
            continue
        end

        task.wait(1)

        local enemies = getQuestEnemies()
        while #enemies > 0 do
            for _, enemy in ipairs(enemies) do
                if enemy and enemy.Parent and enemy:FindFirstChild("Humanoid") and enemy.Humanoid.Health > 0 then
                    attackEnemy(enemy)
                    task.wait(0.2)
                end
            end
            enemies = getQuestEnemies()
        end

        executeEnemies()
        task.wait(1)
    end
end)

